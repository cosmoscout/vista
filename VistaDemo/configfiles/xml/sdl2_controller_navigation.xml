<module>
  <nodespace>
  </nodespace>
  <graph>
    <node name="controller_source" type="DriverSensor">
      <param name="sensor_index" value="0"/>
      <param name="driver" value="SDL2CONTROLLER"/>
    </node>

    <node name="controller" type="HistoryProject">
    </node>

    <node name="project_mode" type="ConstantValue[int]">
      <param name="value" value="0"/>
    </node>

    <!-- Constants #################################### -->
    <node name="-one" type="ConstantValue[float]">
      <param name="value" value="-1"/>
    </node>

    <node name="zero" type="ConstantValue[float]">
      <param name="value" value="0"/>
    </node>

    <node name="one" type="ConstantValue[float]">
      <param name="value" value="1"/>
    </node>

    <node name="two" type="ConstantValue[float]">
      <param name="value" value="2"/>
    </node>
    
    <node name="four" type="ConstantValue[float]">
      <param name="value" value="4"/>
    </node>
    
    <node name="eight" type="ConstantValue[float]">
      <param name="value" value="8"/>
    </node>
    <!-- ############################################## -->

		<node name="speed_add" type="Add[float]"/>
		<node name="speed_mul" type="Multiply[float]"/>

    <node name="translation"   type="Compose3DVector" />

    <node name="invert_yaw"    type="Multiply[float]" />
    <node name="rotation_axis" type="Compose3DVector" />
    <node name="create_quat"   type="EulerRotate" />

		<node name="timer" type="Timer" />

    <node name="nav_mode" type="ConstantValue[int]">
      <param name="value" value="2"/>
    </node>
		<node name="nav" type="Navigation"/>
    
		<node name="apply_nav" type="ApplyTransform">
			<param name="object" value="CAM:MAIN"/>
			<param name="local"  value="true"/>
		</node>

  </graph>
  <edges>
    <edge fromnode="controller_source"     tonode="controller"              fromport="history"     toport="history" />
    <edge fromnode="project_mode"          tonode="controller"              fromport="value"       toport="sampling_mode" />

    <!-- Create the 3d vector responsible for navigation -->
		<edge fromnode="controller"    tonode="translation"       fromport="STICK_LEFT_X"   toport="x"/>
		<edge fromnode="zero"          tonode="translation"       fromport="value"          toport="y"/>
		<edge fromnode="controller"    tonode="translation"       fromport="STICK_LEFT_Y"   toport="z"/>
    
		<edge fromnode="translation"   tonode="nav"               fromport="out"            toport="translation"/>

    <!-- Create the 3d vector responsible for navigation -->
		<edge fromnode="controller"    tonode="speed_add"         fromport="TRIGGER_RIGHT"  toport="first"/>
    <edge fromnode="one"           tonode="speed_add"         fromport="value"          toport="second"/>
    
    <edge fromnode="speed_add"     tonode="speed_mul"         fromport="out"            toport="first"/>
    <edge fromnode="eight"         tonode="speed_mul"         fromport="value"          toport="second"/>
    
    <edge fromnode="speed_mul"     tonode="nav"               fromport="out"            toport="linear_speed"/>

    <!-- Create the 3d vector and quaternion responsible for rotation -->
    <edge fromnode="controller"    tonode="invert_yaw"        fromport="STICK_RIGHT_X"  toport="first"/>
    <edge fromnode="-one"          tonode="invert_yaw"        fromport="value"          toport="second"/>

    <edge fromnode="controller"    tonode="rotation_axis"     fromport="STICK_RIGHT_Y"  toport="x"/>
    <edge fromnode="invert_yaw"    tonode="rotation_axis"     fromport="out"            toport="y"/>
    <edge fromnode="zero"          tonode="rotation_axis"     fromport="value"          toport="z"/>

    <edge fromnode="rotation_axis" tonode="create_quat"       fromport="out"            toport="angles"/>
    
    <edge fromnode="create_quat"   tonode="nav"               fromport="out"            toport="rotation"/>
    <edge fromnode="nav_mode"      tonode="nav"               fromport="value"          toport="navigation_mode"/>

    <!-- Set the delta time -->
		<edge fromnode="timer"         tonode="nav"               fromport="dt"             toport="dt"/>

		<edge fromnode="nav"           tonode="apply_nav"         fromport="transform"      toport="in"/>
  </edges>
</module>