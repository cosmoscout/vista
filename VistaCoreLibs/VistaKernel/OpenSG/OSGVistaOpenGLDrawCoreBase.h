/*============================================================================*/
/*                              ViSTA VR toolkit                              */
/*               Copyright (c) 1997-2016 RWTH Aachen University               */
/*============================================================================*/
/*                                  License                                   */
/*                                                                            */
/*  This program is free software: you can redistribute it and/or modify      */
/*  it under the terms of the GNU Lesser General Public License as published  */
/*  by the Free Software Foundation, either version 3 of the License, or      */
/*  (at your option) any later version.                                       */
/*                                                                            */
/*  This program is distributed in the hope that it will be useful,           */
/*  but WITHOUT ANY WARRANTY; without even the implied warranty of            */
/*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             */
/*  GNU Lesser General Public License for more details.                       */
/*                                                                            */
/*  You should have received a copy of the GNU Lesser General Public License  */
/*  along with this program.  If not, see <http://www.gnu.org/licenses/>.     */
/*============================================================================*/
/*                                Contributors                                */
/*                                                                            */
/*============================================================================*/
/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class VistaOpenGLDrawCore
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#ifndef _OSGVistaOpenGLDrawCoreBASE_H_
#define _OSGVistaOpenGLDrawCoreBASE_H_
#ifdef __sgi
#pragma once
#endif

#include "OSGVistaOpenGLDrawCoreFields.h"

#ifdef WIN32
// disable warnings from OpenSG
#pragma warning(push)
#pragma warning(disable : 4127)
#pragma warning(disable : 4189)
#pragma warning(disable : 4231)
#pragma warning(disable : 4267)
#endif

#include <OpenSG/OSGConfig.h>

#include <OpenSG/OSGBaseTypes.h>
#include <OpenSG/OSGCoredNodePtr.h>
#include <OpenSG/OSGRefPtr.h>

#include <OpenSG/OSGMaterialDrawable.h> // Parent

#ifdef WIN32
#pragma warning(pop)
#endif

OSG_BEGIN_NAMESPACE

class VistaOpenGLDrawCore;
class BinaryDataHandler;

//! \brief VistaOpenGLDrawCore Base Class.

class VistaOpenGLDrawCoreBase : public MaterialDrawable {
 private:
  typedef MaterialDrawable Inherited;

  /*==========================  PUBLIC  =================================*/
 public:
  typedef VistaOpenGLDrawCorePtr Ptr;

  static const OSG::BitVector MTInfluenceMask;

  /*---------------------------------------------------------------------*/
  /*! \name                    Class Get                                 */
  /*! \{                                                                 */

  static FieldContainerType& getClassType(void);
  static UInt32              getClassTypeId(void);

  /*! \}                                                                 */
  /*---------------------------------------------------------------------*/
  /*! \name                FieldContainer Get                            */
  /*! \{                                                                 */

  virtual FieldContainerType&       getType(void);
  virtual const FieldContainerType& getType(void) const;

  virtual UInt32 getContainerSize(void) const;

  /*! \}                                                                 */
  /*---------------------------------------------------------------------*/
  /*! \name                       Sync                                   */
  /*! \{                                                                 */

  /*! \}                                                                 */
  /*---------------------------------------------------------------------*/
  /*! \name                   Binary Access                              */
  /*! \{                                                                 */

  virtual UInt32 getBinSize(const BitVector& whichField);
  virtual void   copyToBin(BinaryDataHandler& pMem, const BitVector& whichField);
  virtual void   copyFromBin(BinaryDataHandler& pMem, const BitVector& whichField);

  /*! \}                                                                 */
  /*---------------------------------------------------------------------*/
  /*! \name                   Construction                               */
  /*! \{                                                                 */

  static VistaOpenGLDrawCorePtr create(void);
  static VistaOpenGLDrawCorePtr createEmpty(void);

  /*! \}                                                                 */

  /*---------------------------------------------------------------------*/
  /*! \name                       Copy                                   */
  /*! \{                                                                 */

  virtual FieldContainerPtr shallowCopy(void) const;

  /*! \}                                                                 */
  /*=========================  PROTECTED  ===============================*/
 protected:
  /*---------------------------------------------------------------------*/
  /*! \name                   Constructors                               */
  /*! \{                                                                 */

  VistaOpenGLDrawCoreBase(void);
  VistaOpenGLDrawCoreBase(const VistaOpenGLDrawCoreBase& source);

  /*! \}                                                                 */
  /*---------------------------------------------------------------------*/
  /*! \name                   Destructors                                */
  /*! \{                                                                 */

  virtual ~VistaOpenGLDrawCoreBase(void);

  /*! \}                                                                 */
  /*---------------------------------------------------------------------*/
  /*! \name                       Sync                                   */
  /*! \{                                                                 */

#if !defined(OSG_FIXED_MFIELDSYNC)
  void executeSyncImpl(VistaOpenGLDrawCoreBase* pOther, const BitVector& whichField);

  virtual void executeSync(FieldContainer& other, const BitVector& whichField);
#else
  void executeSyncImpl(
      VistaOpenGLDrawCoreBase* pOther, const BitVector& whichField, const SyncInfo& sInfo);

  virtual void executeSync(
      FieldContainer& other, const BitVector& whichField, const SyncInfo& sInfo);

  virtual void execBeginEdit(const BitVector& whichField, UInt32 uiAspect, UInt32 uiContainerSize);

  void execBeginEditImpl(const BitVector& whichField, UInt32 uiAspect, UInt32 uiContainerSize);

  virtual void onDestroyAspect(UInt32 uiId, UInt32 uiAspect);
#endif

  /*! \}                                                                 */
  /*==========================  PRIVATE  ================================*/
 private:
  friend class FieldContainer;

  static FieldContainerType _type;

  // prohibit default functions (move to 'public' if you need one)
  void operator=(const VistaOpenGLDrawCoreBase& source);
};

//---------------------------------------------------------------------------
//   Exported Types
//---------------------------------------------------------------------------

typedef VistaOpenGLDrawCoreBase* VistaOpenGLDrawCoreBaseP;

typedef osgIF<VistaOpenGLDrawCoreBase::isNodeCore, CoredNodePtr<VistaOpenGLDrawCore>,
    FieldContainer::attempt_to_create_CoredNodePtr_on_non_NodeCore_FC>::_IRet
    VistaOpenGLDrawCoreNodePtr;

typedef RefPtr<VistaOpenGLDrawCorePtr> VistaOpenGLDrawCoreRefPtr;

OSG_END_NAMESPACE

#define OSGVistaOpenGLDrawCoreBASE_HEADER_CVSID "@(#)$Id$"

#endif /* _OSGVistaOpenGLDrawCoreBASE_H_ */
